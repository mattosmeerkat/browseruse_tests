2025-05-09 10:34:09,132 - browser-use-diag - INFO - {"task_id": "task_26096efed9806787", "timestamp": "2025-05-09T10:34:09.132450", "message": "Iniciando tarefa com URL: https://www.gov.br/cvm/pt-br/assuntos/noticias", "extra_data": {"task": "Acesse 'https://www.gov.br/cvm/pt-br/assuntos/noticias' e liste os t\u00edtulos das 3 not\u00edcias mais recentes em formato JSON", "timeout": 600}}
2025-05-09 10:34:09,132 - browser-use-diag - DEBUG - {"task_id": "task_26096efed9806787", "timestamp": "2025-05-09T10:34:09.132728", "message": "Construindo o prompt para o agente", "extra_data": {"full_task": "Acesse https://www.gov.br/cvm/pt-br/assuntos/noticias. Acesse 'https://www.gov.br/cvm/pt-br/assuntos/noticias' e liste os t\u00edtulos das 3 not\u00edcias mais recentes em formato JSON"}}
2025-05-09 10:34:12,162 - browser-use-diag - DEBUG - {"task_id": "task_26096efed9806787", "timestamp": "2025-05-09T10:34:12.162534", "message": "Agente inicializado com sucesso", "extra_data": null}
2025-05-09 10:34:12,163 - browser-use-diag - INFO - {"task_id": "task_26096efed9806787", "timestamp": "2025-05-09T10:34:12.163076", "message": "Iniciando execu\u00e7\u00e3o do agente run()", "extra_data": null}
2025-05-09 10:34:17,753 - browser-use-diag - INFO - {"task_id": "task_26096efed9806787", "timestamp": "2025-05-09T10:34:17.753442", "message": "Execu\u00e7\u00e3o do agente conclu\u00edda em 8.62 segundos", "extra_data": null}
2025-05-09 10:34:17,753 - browser-use-diag - DEBUG - {"task_id": "task_26096efed9806787", "timestamp": "2025-05-09T10:34:17.753939", "message": "Extraindo resultado final do agente", "extra_data": null}
2025-05-09 10:34:17,754 - browser-use-diag - WARNING - {"task_id": "task_26096efed9806787", "timestamp": "2025-05-09T10:34:17.754219", "message": "Resultado final vazio", "extra_data": null}
2025-05-09 10:34:17,754 - browser-use-diag - WARNING - {"task_id": "task_26096efed9806787", "timestamp": "2025-05-09T10:34:17.754471", "message": "Retornando resultado vazio", "extra_data": null}
2025-05-09 10:35:40,538 - browser-use-diag - INFO - {"task_id": "task_5561ce6b594d89a3", "timestamp": "2025-05-09T10:35:40.538530", "message": "Iniciando tarefa com URL: https://www.gov.br/cvm/pt-br/assuntos/noticias", "extra_data": {"task": "Acesse 'https://www.gov.br/cvm/pt-br/assuntos/noticias' e liste os t\u00edtulos das 3 not\u00edcias mais recentes em formato JSON", "timeout": 600}}
2025-05-09 10:35:40,538 - browser-use-diag - DEBUG - {"task_id": "task_5561ce6b594d89a3", "timestamp": "2025-05-09T10:35:40.538746", "message": "Construindo o prompt para o agente", "extra_data": {"full_task": "Acesse https://www.gov.br/cvm/pt-br/assuntos/noticias. Acesse 'https://www.gov.br/cvm/pt-br/assuntos/noticias' e liste os t\u00edtulos das 3 not\u00edcias mais recentes em formato JSON"}}
2025-05-09 10:35:43,838 - browser-use-diag - DEBUG - {"task_id": "task_5561ce6b594d89a3", "timestamp": "2025-05-09T10:35:43.838603", "message": "Agente inicializado com sucesso", "extra_data": null}
2025-05-09 10:35:43,838 - browser-use-diag - INFO - {"task_id": "task_5561ce6b594d89a3", "timestamp": "2025-05-09T10:35:43.838962", "message": "Iniciando execu\u00e7\u00e3o do agente run()", "extra_data": null}
2025-05-09 10:36:24,250 - browser-use-diag - INFO - {"task_id": "task_5561ce6b594d89a3", "timestamp": "2025-05-09T10:36:24.250854", "message": "Execu\u00e7\u00e3o do agente conclu\u00edda em 43.71 segundos", "extra_data": null}
2025-05-09 10:36:24,251 - browser-use-diag - DEBUG - {"task_id": "task_5561ce6b594d89a3", "timestamp": "2025-05-09T10:36:24.251123", "message": "Extraindo resultado final do agente", "extra_data": null}
2025-05-09 10:36:24,251 - browser-use-diag - DEBUG - {"task_id": "task_5561ce6b594d89a3", "timestamp": "2025-05-09T10:36:24.251226", "message": "Resultado final obtido", "extra_data": {"result_size": 354}}
2025-05-09 10:36:24,251 - browser-use-diag - DEBUG - {"task_id": "task_5561ce6b594d89a3", "timestamp": "2025-05-09T10:36:24.251386", "message": "Tentando parsear resultado como JSON", "extra_data": null}
2025-05-09 10:36:24,251 - browser-use-diag - DEBUG - {"task_id": "task_5561ce6b594d89a3", "timestamp": "2025-05-09T10:36:24.251481", "message": "Parse JSON bem-sucedido", "extra_data": null}
2025-05-09 10:37:36,987 - browser-use-diag - INFO - {"task_id": "task_08e53eba728d37a2", "timestamp": "2025-05-09T10:37:36.987199", "message": "Iniciando tarefa com URL: https://www.gov.br/cvm/pt-br/pagina-inicial/#", "extra_data": {"task": "Acesse https://www.gov.br/cvm/pt-br/pagina-inicial/, clique em 'Assuntos', depois em 'Not\u00edcias'. Leia as not\u00edcias do dia de ontem e para cada uma extraia os seguintes dados:\n\n1. T\u00edtulo da not\u00edcia\n2. Data e hora de publica\u00e7\u00e3o (extraindo dia da semana separadamente)\n3. Quem fez a not\u00edcia\n4. Quem revisou a not\u00edcia\n5. Nome do regulador (normalmente CVM)\n6. Ementa ou resumo da not\u00edcia\n7. Conte\u00fado completo da not\u00edcia\n8. URL/link da not\u00edcia\n\nFormate as informa\u00e7\u00f5es de cada not\u00edcia em JSON seguindo exatamente este modelo:\n{\n  \"feito_por\": \"\",\n  \"revisado_por\": \"\",\n  \"data_publicacao\": \"\",\n  \"dia_semana\": \"\",\n  \"hora_publicacao\": \"\",\n  \"regulador\": \"CVM\",\n  \"titulo\": \"\",\n  \"ementa\": \"\",\n  \"conteudo_completo\": \"\",\n  \"link\": \"\"\n}\n\nSe algum dos campos n\u00e3o estiver dispon\u00edvel, deixe-o vazio, mas inclua todos os campos. Retorne um JSON v\u00e1lido para cada not\u00edcia. Se houver mais de uma not\u00edcia, retorne um array de JSONs.", "timeout": 300}}
2025-05-09 10:37:36,987 - browser-use-diag - DEBUG - {"task_id": "task_08e53eba728d37a2", "timestamp": "2025-05-09T10:37:36.987385", "message": "Construindo o prompt para o agente", "extra_data": {"full_task": "Acesse https://www.gov.br/cvm/pt-br/pagina-inicial/#. Acesse https://www.gov.br/cvm/pt-br/pagina-inicial/, clique em 'Assuntos', depois em 'Not\u00edcias'. Leia as not\u00edcias do dia de ontem e para cada uma extraia os seguintes dados:\n\n1. T\u00edtulo da not\u00edcia\n2. Data e hora de publica\u00e7\u00e3o (extraindo dia da semana separadamente)\n3. Quem fez a not\u00edcia\n4. Quem revisou a not\u00edcia\n5. Nome do regulador (normalmente CVM)\n6. Ementa ou resumo da not\u00edcia\n7. Conte\u00fado completo da not\u00edcia\n8. URL/link da not\u00edcia\n\nFormate as informa\u00e7\u00f5es de cada not\u00edcia em JSON seguindo exatamente este modelo:\n{\n  \"feito_por\": \"\",\n  \"revisado_por\": \"\",\n  \"data_publicacao\": \"\",\n  \"dia_semana\": \"\",\n  \"hora_publicacao\": \"\",\n  \"regulador\": \"CVM\",\n  \"titulo\": \"\",\n  \"ementa\": \"\",\n  \"conteudo_completo\": \"\",\n  \"link\": \"\"\n}\n\nSe algum dos campos n\u00e3o estiver dispon\u00edvel, deixe-o vazio, mas inclua todos os campos. Retorne um JSON v\u00e1lido para cada not\u00edcia. Se houver mais de uma not\u00edcia, retorne um array de JSONs."}}
2025-05-09 10:37:37,730 - browser-use-diag - DEBUG - {"task_id": "task_08e53eba728d37a2", "timestamp": "2025-05-09T10:37:37.730255", "message": "Agente inicializado com sucesso", "extra_data": null}
2025-05-09 10:37:37,730 - browser-use-diag - INFO - {"task_id": "task_08e53eba728d37a2", "timestamp": "2025-05-09T10:37:37.730533", "message": "Iniciando execu\u00e7\u00e3o do agente run()", "extra_data": null}
2025-05-09 10:39:57,151 - browser-use-diag - INFO - {"task_id": "task_08e53eba728d37a2", "timestamp": "2025-05-09T10:39:57.151680", "message": "Execu\u00e7\u00e3o do agente conclu\u00edda em 140.16 segundos", "extra_data": null}
2025-05-09 10:39:57,151 - browser-use-diag - DEBUG - {"task_id": "task_08e53eba728d37a2", "timestamp": "2025-05-09T10:39:57.151910", "message": "Extraindo resultado final do agente", "extra_data": null}
2025-05-09 10:39:57,152 - browser-use-diag - DEBUG - {"task_id": "task_08e53eba728d37a2", "timestamp": "2025-05-09T10:39:57.152027", "message": "Resultado final obtido", "extra_data": {"result_size": 3556}}
2025-05-09 10:39:57,152 - browser-use-diag - DEBUG - {"task_id": "task_08e53eba728d37a2", "timestamp": "2025-05-09T10:39:57.152185", "message": "Tentando parsear resultado como JSON", "extra_data": null}
2025-05-09 10:39:57,152 - browser-use-diag - DEBUG - {"task_id": "task_08e53eba728d37a2", "timestamp": "2025-05-09T10:39:57.152329", "message": "Parse JSON bem-sucedido", "extra_data": null}
2025-05-09 10:39:57,153 - browser-use-diag - ERROR - {"task_id": "task_08e53eba728d37a2", "timestamp": "2025-05-09T10:39:57.153893", "message": "Erro durante execu\u00e7\u00e3o: 1 validation error for TaskResponse\nresult\n  Input should be a valid dictionary [type=dict_type, input_value=[{'feito_por': 'Comiss\u00e3o...o-mercado-de-capitais'}], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.10/v/dict_type", "extra_data": {"traceback": "Traceback (most recent call last):\n  File \"/home/mattos/meerkat/tests_scraping/browseruse_tests/api.py\", line 208, in run_task\n    return TaskResponse(\n           ^^^^^^^^^^^^^\n  File \"/home/mattos/.local/lib/python3.11/site-packages/pydantic/main.py\", line 214, in __init__\n    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npydantic_core._pydantic_core.ValidationError: 1 validation error for TaskResponse\nresult\n  Input should be a valid dictionary [type=dict_type, input_value=[{'feito_por': 'Comiss\u00e3o...o-mercado-de-capitais'}], input_type=list]\n    For further information visit https://errors.pydantic.dev/2.10/v/dict_type\n"}}
2025-05-09 10:43:33,945 - browser-use-diag - INFO - {"task_id": "task_dd95f7993ea2bf49", "timestamp": "2025-05-09T10:43:33.945763", "message": "Iniciando tarefa com URL: https://www.gov.br/cvm/pt-br/pagina-inicial/#", "extra_data": {"task": "Acesse https://www.gov.br/cvm/pt-br/pagina-inicial/, clique em 'Assuntos', depois em 'Not\u00edcias'. Leia as not\u00edcias do dia de ontem e para cada uma extraia os seguintes dados:\n\n1. T\u00edtulo da not\u00edcia\n2. Data e hora de publica\u00e7\u00e3o (extraindo dia da semana separadamente)\n3. Quem fez a not\u00edcia\n4. Quem revisou a not\u00edcia\n5. Nome do regulador (normalmente CVM)\n6. Ementa ou resumo da not\u00edcia\n7. Conte\u00fado completo da not\u00edcia\n8. URL/link da not\u00edcia\n\nFormate as informa\u00e7\u00f5es de cada not\u00edcia em JSON seguindo exatamente este modelo:\n{\n  \"feito_por\": \"\",\n  \"revisado_por\": \"\",\n  \"data_publicacao\": \"\",\n  \"dia_semana\": \"\",\n  \"hora_publicacao\": \"\",\n  \"regulador\": \"CVM\",\n  \"titulo\": \"\",\n  \"ementa\": \"\",\n  \"conteudo_completo\": \"\",\n  \"link\": \"\"\n}\n\nSe algum dos campos n\u00e3o estiver dispon\u00edvel, deixe-o vazio, mas inclua todos os campos. Retorne um JSON v\u00e1lido para cada not\u00edcia. Se houver mais de uma not\u00edcia, retorne um array de JSONs.", "timeout": 300}}
2025-05-09 10:43:33,946 - browser-use-diag - DEBUG - {"task_id": "task_dd95f7993ea2bf49", "timestamp": "2025-05-09T10:43:33.946032", "message": "Construindo o prompt para o agente", "extra_data": {"full_task": "Acesse https://www.gov.br/cvm/pt-br/pagina-inicial/#. Acesse https://www.gov.br/cvm/pt-br/pagina-inicial/, clique em 'Assuntos', depois em 'Not\u00edcias'. Leia as not\u00edcias do dia de ontem e para cada uma extraia os seguintes dados:\n\n1. T\u00edtulo da not\u00edcia\n2. Data e hora de publica\u00e7\u00e3o (extraindo dia da semana separadamente)\n3. Quem fez a not\u00edcia\n4. Quem revisou a not\u00edcia\n5. Nome do regulador (normalmente CVM)\n6. Ementa ou resumo da not\u00edcia\n7. Conte\u00fado completo da not\u00edcia\n8. URL/link da not\u00edcia\n\nFormate as informa\u00e7\u00f5es de cada not\u00edcia em JSON seguindo exatamente este modelo:\n{\n  \"feito_por\": \"\",\n  \"revisado_por\": \"\",\n  \"data_publicacao\": \"\",\n  \"dia_semana\": \"\",\n  \"hora_publicacao\": \"\",\n  \"regulador\": \"CVM\",\n  \"titulo\": \"\",\n  \"ementa\": \"\",\n  \"conteudo_completo\": \"\",\n  \"link\": \"\"\n}\n\nSe algum dos campos n\u00e3o estiver dispon\u00edvel, deixe-o vazio, mas inclua todos os campos. Retorne um JSON v\u00e1lido para cada not\u00edcia. Se houver mais de uma not\u00edcia, retorne um array de JSONs."}}
2025-05-09 10:43:38,311 - browser-use-diag - DEBUG - {"task_id": "task_dd95f7993ea2bf49", "timestamp": "2025-05-09T10:43:38.311445", "message": "Agente inicializado com sucesso", "extra_data": null}
2025-05-09 10:43:38,311 - browser-use-diag - INFO - {"task_id": "task_dd95f7993ea2bf49", "timestamp": "2025-05-09T10:43:38.311760", "message": "Iniciando execu\u00e7\u00e3o do agente run()", "extra_data": null}
2025-05-09 10:47:06,021 - browser-use-diag - INFO - {"task_id": "task_dd95f7993ea2bf49", "timestamp": "2025-05-09T10:47:06.021102", "message": "Execu\u00e7\u00e3o do agente conclu\u00edda em 212.07 segundos", "extra_data": null}
2025-05-09 10:47:06,021 - browser-use-diag - DEBUG - {"task_id": "task_dd95f7993ea2bf49", "timestamp": "2025-05-09T10:47:06.021432", "message": "Extraindo resultado final do agente", "extra_data": null}
2025-05-09 10:47:06,021 - browser-use-diag - DEBUG - {"task_id": "task_dd95f7993ea2bf49", "timestamp": "2025-05-09T10:47:06.021550", "message": "Resultado final obtido", "extra_data": {"result_size": 3598}}
2025-05-09 10:47:06,021 - browser-use-diag - DEBUG - {"task_id": "task_dd95f7993ea2bf49", "timestamp": "2025-05-09T10:47:06.021731", "message": "Tentando parsear resultado como JSON", "extra_data": null}
2025-05-09 10:47:06,021 - browser-use-diag - DEBUG - {"task_id": "task_dd95f7993ea2bf49", "timestamp": "2025-05-09T10:47:06.021879", "message": "Parse JSON bem-sucedido", "extra_data": null}
2025-05-09 10:47:06,022 - browser-use-diag - DEBUG - {"task_id": "task_dd95f7993ea2bf49", "timestamp": "2025-05-09T10:47:06.022002", "message": "Resultado \u00e9 uma lista com 1 itens", "extra_data": null}
2025-05-09 11:41:00,918 - browser-use-diag - INFO - {"task_id": "task_b44c0adadc1928cc", "timestamp": "2025-05-09T11:41:00.918129", "message": "Iniciando tarefa com URL: https://www.gov.br/cvm/pt-br/pagina-inicial/#", "extra_data": {"task": "Acesse https://www.gov.br/cvm/pt-br/pagina-inicial/, clique em 'Assuntos', depois em 'Not\u00edcias'. Leia as not\u00edcias do dia de ontem e para cada uma extraia os seguintes dados:\n\n1. T\u00edtulo da not\u00edcia\n2. Data e hora de publica\u00e7\u00e3o (extraindo dia da semana separadamente)\n3. Quem fez a not\u00edcia\n4. Quem revisou a not\u00edcia\n5. Nome do regulador\n6. Ementa ou resumo da not\u00edcia\n7. Conte\u00fado completo da not\u00edcia\n8. URL/link da not\u00edcia\n\nFormate as informa\u00e7\u00f5es de cada not\u00edcia em JSON seguindo exatamente este modelo:\n{\n  \"feito_por\": \"\",\n  \"revisado_por\": \"\",\n  \"data_publicacao\": \"\",\n  \"dia_semana\": \"\",\n  \"hora_publicacao\": \"\",\n  \"regulador\": \"CVM\",\n  \"titulo\": \"\",\n  \"ementa\": \"\",\n  \"conteudo_completo\": \"\",\n  \"link\": \"\"\n}\n\nSe algum dos campos n\u00e3o estiver dispon\u00edvel, deixe-o vazio, mas inclua todos os campos. Retorne um JSON v\u00e1lido para cada not\u00edcia. Se houver mais de uma not\u00edcia, retorne um array de JSONs.", "timeout": 300}}
2025-05-09 11:41:00,919 - browser-use-diag - DEBUG - {"task_id": "task_b44c0adadc1928cc", "timestamp": "2025-05-09T11:41:00.919473", "message": "Construindo o prompt para o agente", "extra_data": {"full_task": "Acesse https://www.gov.br/cvm/pt-br/pagina-inicial/#. Acesse https://www.gov.br/cvm/pt-br/pagina-inicial/, clique em 'Assuntos', depois em 'Not\u00edcias'. Leia as not\u00edcias do dia de ontem e para cada uma extraia os seguintes dados:\n\n1. T\u00edtulo da not\u00edcia\n2. Data e hora de publica\u00e7\u00e3o (extraindo dia da semana separadamente)\n3. Quem fez a not\u00edcia\n4. Quem revisou a not\u00edcia\n5. Nome do regulador\n6. Ementa ou resumo da not\u00edcia\n7. Conte\u00fado completo da not\u00edcia\n8. URL/link da not\u00edcia\n\nFormate as informa\u00e7\u00f5es de cada not\u00edcia em JSON seguindo exatamente este modelo:\n{\n  \"feito_por\": \"\",\n  \"revisado_por\": \"\",\n  \"data_publicacao\": \"\",\n  \"dia_semana\": \"\",\n  \"hora_publicacao\": \"\",\n  \"regulador\": \"CVM\",\n  \"titulo\": \"\",\n  \"ementa\": \"\",\n  \"conteudo_completo\": \"\",\n  \"link\": \"\"\n}\n\nSe algum dos campos n\u00e3o estiver dispon\u00edvel, deixe-o vazio, mas inclua todos os campos. Retorne um JSON v\u00e1lido para cada not\u00edcia. Se houver mais de uma not\u00edcia, retorne um array de JSONs."}}
2025-05-09 11:41:02,151 - browser-use-diag - DEBUG - {"task_id": "task_b44c0adadc1928cc", "timestamp": "2025-05-09T11:41:02.151477", "message": "Agente inicializado com sucesso", "extra_data": null}
2025-05-09 11:41:02,151 - browser-use-diag - INFO - {"task_id": "task_b44c0adadc1928cc", "timestamp": "2025-05-09T11:41:02.151795", "message": "Iniciando execu\u00e7\u00e3o do agente run()", "extra_data": null}
2025-05-09 11:43:19,860 - browser-use-diag - INFO - {"task_id": "task_05ee15d0ee4ef785", "timestamp": "2025-05-09T11:43:19.860034", "message": "Iniciando tarefa com URL: https://www.gov.br/cvm/pt-br/pagina-inicial/#", "extra_data": {"task": "Acesse https://www.gov.br/cvm/pt-br/pagina-inicial/, clique em 'Assuntos', depois em 'Not\u00edcias'. Leia as not\u00edcias do dia de ontem e para cada uma extraia os seguintes dados:\n\n1. T\u00edtulo da not\u00edcia\n2. Data e hora de publica\u00e7\u00e3o (extraindo dia da semana separadamente)\n3. Quem fez a not\u00edcia\n4. Quem revisou a not\u00edcia\n5. Nome do regulador\n6. Ementa ou resumo da not\u00edcia\n7. Conte\u00fado completo da not\u00edcia\n8. URL/link da not\u00edcia\n\nFormate as informa\u00e7\u00f5es de cada not\u00edcia em JSON seguindo exatamente este modelo:\n{\n  \"feito_por\": \"\",\n  \"revisado_por\": \"\",\n  \"data_publicacao\": \"\",\n  \"dia_semana\": \"\",\n  \"hora_publicacao\": \"\",\n  \"regulador\": \"CVM\",\n  \"titulo\": \"\",\n  \"ementa\": \"\",\n  \"conteudo_completo\": \"\",\n  \"link\": \"\"\n}\n\nSe algum dos campos n\u00e3o estiver dispon\u00edvel, deixe-o vazio, mas inclua todos os campos. Retorne um JSON v\u00e1lido para cada not\u00edcia. Se houver mais de uma not\u00edcia, retorne um array de JSONs.", "timeout": 300}}
2025-05-09 11:43:19,861 - browser-use-diag - DEBUG - {"task_id": "task_05ee15d0ee4ef785", "timestamp": "2025-05-09T11:43:19.861240", "message": "Construindo o prompt para o agente", "extra_data": {"full_task": "Acesse https://www.gov.br/cvm/pt-br/pagina-inicial/#. Acesse https://www.gov.br/cvm/pt-br/pagina-inicial/, clique em 'Assuntos', depois em 'Not\u00edcias'. Leia as not\u00edcias do dia de ontem e para cada uma extraia os seguintes dados:\n\n1. T\u00edtulo da not\u00edcia\n2. Data e hora de publica\u00e7\u00e3o (extraindo dia da semana separadamente)\n3. Quem fez a not\u00edcia\n4. Quem revisou a not\u00edcia\n5. Nome do regulador\n6. Ementa ou resumo da not\u00edcia\n7. Conte\u00fado completo da not\u00edcia\n8. URL/link da not\u00edcia\n\nFormate as informa\u00e7\u00f5es de cada not\u00edcia em JSON seguindo exatamente este modelo:\n{\n  \"feito_por\": \"\",\n  \"revisado_por\": \"\",\n  \"data_publicacao\": \"\",\n  \"dia_semana\": \"\",\n  \"hora_publicacao\": \"\",\n  \"regulador\": \"CVM\",\n  \"titulo\": \"\",\n  \"ementa\": \"\",\n  \"conteudo_completo\": \"\",\n  \"link\": \"\"\n}\n\nSe algum dos campos n\u00e3o estiver dispon\u00edvel, deixe-o vazio, mas inclua todos os campos. Retorne um JSON v\u00e1lido para cada not\u00edcia. Se houver mais de uma not\u00edcia, retorne um array de JSONs."}}
2025-05-09 11:43:22,088 - browser-use-diag - DEBUG - {"task_id": "task_05ee15d0ee4ef785", "timestamp": "2025-05-09T11:43:22.088894", "message": "Agente inicializado com sucesso", "extra_data": null}
2025-05-09 11:43:22,089 - browser-use-diag - INFO - {"task_id": "task_05ee15d0ee4ef785", "timestamp": "2025-05-09T11:43:22.089270", "message": "Iniciando execu\u00e7\u00e3o do agente run()", "extra_data": null}
2025-05-09 11:43:27,499 - browser-use-diag - INFO - {"task_id": "task_05ee15d0ee4ef785", "timestamp": "2025-05-09T11:43:27.499825", "message": "Execu\u00e7\u00e3o do agente conclu\u00edda em 7.64 segundos", "extra_data": null}
2025-05-09 11:43:27,500 - browser-use-diag - DEBUG - {"task_id": "task_05ee15d0ee4ef785", "timestamp": "2025-05-09T11:43:27.500159", "message": "Extraindo resultado final do agente", "extra_data": null}
2025-05-09 11:43:27,500 - browser-use-diag - WARNING - {"task_id": "task_05ee15d0ee4ef785", "timestamp": "2025-05-09T11:43:27.500324", "message": "Resultado final vazio", "extra_data": null}
2025-05-09 11:43:27,500 - browser-use-diag - WARNING - {"task_id": "task_05ee15d0ee4ef785", "timestamp": "2025-05-09T11:43:27.500691", "message": "Retornando resultado vazio", "extra_data": null}
2025-05-09 11:43:54,756 - browser-use-diag - INFO - {"task_id": "task_a19f30c005dd09c2", "timestamp": "2025-05-09T11:43:54.756605", "message": "Iniciando tarefa com URL: https://www.gov.br/cvm/pt-br/pagina-inicial/#", "extra_data": {"task": "Acesse https://www.gov.br/cvm/pt-br/pagina-inicial/, clique em 'Assuntos', depois em 'Not\u00edcias'. Leia as not\u00edcias do dia de ontem e para cada uma extraia os seguintes dados:\n\n1. T\u00edtulo da not\u00edcia\n2. Data e hora de publica\u00e7\u00e3o (extraindo dia da semana separadamente)\n3. Quem fez a not\u00edcia\n4. Quem revisou a not\u00edcia\n5. Nome do regulador\n6. Ementa ou resumo da not\u00edcia\n7. Conte\u00fado completo da not\u00edcia\n8. URL/link da not\u00edcia\n\nFormate as informa\u00e7\u00f5es de cada not\u00edcia em JSON seguindo exatamente este modelo:\n{\n  \"feito_por\": \"\",\n  \"revisado_por\": \"\",\n  \"data_publicacao\": \"\",\n  \"dia_semana\": \"\",\n  \"hora_publicacao\": \"\",\n  \"regulador\": \"CVM\",\n  \"titulo\": \"\",\n  \"ementa\": \"\",\n  \"conteudo_completo\": \"\",\n  \"link\": \"\"\n}\n\nSe algum dos campos n\u00e3o estiver dispon\u00edvel, deixe-o vazio, mas inclua todos os campos. Retorne um JSON v\u00e1lido para cada not\u00edcia. Se houver mais de uma not\u00edcia, retorne um array de JSONs.", "timeout": 300}}
2025-05-09 11:43:54,756 - browser-use-diag - DEBUG - {"task_id": "task_a19f30c005dd09c2", "timestamp": "2025-05-09T11:43:54.756798", "message": "Construindo o prompt para o agente", "extra_data": {"full_task": "Acesse https://www.gov.br/cvm/pt-br/pagina-inicial/#. Acesse https://www.gov.br/cvm/pt-br/pagina-inicial/, clique em 'Assuntos', depois em 'Not\u00edcias'. Leia as not\u00edcias do dia de ontem e para cada uma extraia os seguintes dados:\n\n1. T\u00edtulo da not\u00edcia\n2. Data e hora de publica\u00e7\u00e3o (extraindo dia da semana separadamente)\n3. Quem fez a not\u00edcia\n4. Quem revisou a not\u00edcia\n5. Nome do regulador\n6. Ementa ou resumo da not\u00edcia\n7. Conte\u00fado completo da not\u00edcia\n8. URL/link da not\u00edcia\n\nFormate as informa\u00e7\u00f5es de cada not\u00edcia em JSON seguindo exatamente este modelo:\n{\n  \"feito_por\": \"\",\n  \"revisado_por\": \"\",\n  \"data_publicacao\": \"\",\n  \"dia_semana\": \"\",\n  \"hora_publicacao\": \"\",\n  \"regulador\": \"CVM\",\n  \"titulo\": \"\",\n  \"ementa\": \"\",\n  \"conteudo_completo\": \"\",\n  \"link\": \"\"\n}\n\nSe algum dos campos n\u00e3o estiver dispon\u00edvel, deixe-o vazio, mas inclua todos os campos. Retorne um JSON v\u00e1lido para cada not\u00edcia. Se houver mais de uma not\u00edcia, retorne um array de JSONs."}}
2025-05-09 11:43:56,372 - browser-use-diag - DEBUG - {"task_id": "task_a19f30c005dd09c2", "timestamp": "2025-05-09T11:43:56.372122", "message": "Agente inicializado com sucesso", "extra_data": null}
2025-05-09 11:43:56,372 - browser-use-diag - INFO - {"task_id": "task_a19f30c005dd09c2", "timestamp": "2025-05-09T11:43:56.372837", "message": "Iniciando execu\u00e7\u00e3o do agente run()", "extra_data": null}
2025-05-09 11:47:47,815 - browser-use-diag - INFO - {"task_id": "task_5dc488503897a5f2", "timestamp": "2025-05-09T11:47:47.815525", "message": "Iniciando tarefa com URL: https://www.gov.br/cvm/pt-br/pagina-inicial/#", "extra_data": {"task": "Acesse https://www.gov.br/cvm/pt-br/pagina-inicial/, clique em 'Assuntos', depois em 'Not\u00edcias'. Leia as not\u00edcias do dia de ontem e para cada uma extraia os seguintes dados:\n\n1. T\u00edtulo da not\u00edcia\n2. Data e hora de publica\u00e7\u00e3o (extraindo dia da semana separadamente)\n3. Quem fez a not\u00edcia\n4. Quem revisou a not\u00edcia\n5. Nome do regulador\n6. Ementa ou resumo da not\u00edcia\n7. Conte\u00fado completo da not\u00edcia\n8. URL/link da not\u00edcia\n\nFormate as informa\u00e7\u00f5es de cada not\u00edcia em JSON seguindo exatamente este modelo:\n{\n  \"feito_por\": \"\",\n  \"revisado_por\": \"\",\n  \"data_publicacao\": \"\",\n  \"dia_semana\": \"\",\n  \"hora_publicacao\": \"\",\n  \"regulador\": \"CVM\",\n  \"titulo\": \"\",\n  \"ementa\": \"\",\n  \"conteudo_completo\": \"\",\n  \"link\": \"\"\n}\n\nSe algum dos campos n\u00e3o estiver dispon\u00edvel, deixe-o vazio, mas inclua todos os campos. Retorne um JSON v\u00e1lido para cada not\u00edcia. Se houver mais de uma not\u00edcia, retorne um array de JSONs.", "timeout": 300}}
2025-05-09 11:47:47,815 - browser-use-diag - DEBUG - {"task_id": "task_5dc488503897a5f2", "timestamp": "2025-05-09T11:47:47.815865", "message": "Construindo o prompt para o agente", "extra_data": {"full_task": "Acesse https://www.gov.br/cvm/pt-br/pagina-inicial/#. Acesse https://www.gov.br/cvm/pt-br/pagina-inicial/, clique em 'Assuntos', depois em 'Not\u00edcias'. Leia as not\u00edcias do dia de ontem e para cada uma extraia os seguintes dados:\n\n1. T\u00edtulo da not\u00edcia\n2. Data e hora de publica\u00e7\u00e3o (extraindo dia da semana separadamente)\n3. Quem fez a not\u00edcia\n4. Quem revisou a not\u00edcia\n5. Nome do regulador\n6. Ementa ou resumo da not\u00edcia\n7. Conte\u00fado completo da not\u00edcia\n8. URL/link da not\u00edcia\n\nFormate as informa\u00e7\u00f5es de cada not\u00edcia em JSON seguindo exatamente este modelo:\n{\n  \"feito_por\": \"\",\n  \"revisado_por\": \"\",\n  \"data_publicacao\": \"\",\n  \"dia_semana\": \"\",\n  \"hora_publicacao\": \"\",\n  \"regulador\": \"CVM\",\n  \"titulo\": \"\",\n  \"ementa\": \"\",\n  \"conteudo_completo\": \"\",\n  \"link\": \"\"\n}\n\nSe algum dos campos n\u00e3o estiver dispon\u00edvel, deixe-o vazio, mas inclua todos os campos. Retorne um JSON v\u00e1lido para cada not\u00edcia. Se houver mais de uma not\u00edcia, retorne um array de JSONs."}}
2025-05-09 11:47:50,099 - browser-use-diag - DEBUG - {"task_id": "task_5dc488503897a5f2", "timestamp": "2025-05-09T11:47:50.099939", "message": "Agente inicializado com sucesso", "extra_data": null}
2025-05-09 11:47:50,100 - browser-use-diag - INFO - {"task_id": "task_5dc488503897a5f2", "timestamp": "2025-05-09T11:47:50.100268", "message": "Iniciando execu\u00e7\u00e3o do agente run()", "extra_data": null}
2025-05-09 11:47:54,693 - browser-use-diag - INFO - {"task_id": "task_5dc488503897a5f2", "timestamp": "2025-05-09T11:47:54.693546", "message": "Execu\u00e7\u00e3o do agente conclu\u00edda em 6.88 segundos", "extra_data": null}
2025-05-09 11:47:54,693 - browser-use-diag - DEBUG - {"task_id": "task_5dc488503897a5f2", "timestamp": "2025-05-09T11:47:54.693792", "message": "Extraindo resultado final do agente", "extra_data": null}
2025-05-09 11:47:54,693 - browser-use-diag - WARNING - {"task_id": "task_5dc488503897a5f2", "timestamp": "2025-05-09T11:47:54.693911", "message": "Resultado final vazio", "extra_data": null}
2025-05-09 11:47:54,694 - browser-use-diag - WARNING - {"task_id": "task_5dc488503897a5f2", "timestamp": "2025-05-09T11:47:54.694195", "message": "Retornando resultado vazio", "extra_data": null}
2025-05-09 11:48:02,727 - browser-use-diag - INFO - {"task_id": "task_7d364e6ef53a4ac7", "timestamp": "2025-05-09T11:48:02.727940", "message": "Iniciando tarefa com URL: https://www.gov.br/cvm/pt-br/pagina-inicial/#", "extra_data": {"task": "Acesse https://www.gov.br/cvm/pt-br/pagina-inicial/, clique em 'Assuntos', depois em 'Not\u00edcias'. Leia as not\u00edcias do dia de ontem e para cada uma extraia os seguintes dados:\n\n1. T\u00edtulo da not\u00edcia\n2. Data e hora de publica\u00e7\u00e3o (extraindo dia da semana separadamente)\n3. Quem fez a not\u00edcia\n4. Quem revisou a not\u00edcia\n5. Nome do regulador\n6. Ementa ou resumo da not\u00edcia\n7. Conte\u00fado completo da not\u00edcia\n8. URL/link da not\u00edcia\n\nFormate as informa\u00e7\u00f5es de cada not\u00edcia em JSON seguindo exatamente este modelo:\n{\n  \"feito_por\": \"\",\n  \"revisado_por\": \"\",\n  \"data_publicacao\": \"\",\n  \"dia_semana\": \"\",\n  \"hora_publicacao\": \"\",\n  \"regulador\": \"CVM\",\n  \"titulo\": \"\",\n  \"ementa\": \"\",\n  \"conteudo_completo\": \"\",\n  \"link\": \"\"\n}\n\nSe algum dos campos n\u00e3o estiver dispon\u00edvel, deixe-o vazio, mas inclua todos os campos. Retorne um JSON v\u00e1lido para cada not\u00edcia. Se houver mais de uma not\u00edcia, retorne um array de JSONs.", "timeout": 300}}
2025-05-09 11:48:02,728 - browser-use-diag - DEBUG - {"task_id": "task_7d364e6ef53a4ac7", "timestamp": "2025-05-09T11:48:02.728198", "message": "Construindo o prompt para o agente", "extra_data": {"full_task": "Acesse https://www.gov.br/cvm/pt-br/pagina-inicial/#. Acesse https://www.gov.br/cvm/pt-br/pagina-inicial/, clique em 'Assuntos', depois em 'Not\u00edcias'. Leia as not\u00edcias do dia de ontem e para cada uma extraia os seguintes dados:\n\n1. T\u00edtulo da not\u00edcia\n2. Data e hora de publica\u00e7\u00e3o (extraindo dia da semana separadamente)\n3. Quem fez a not\u00edcia\n4. Quem revisou a not\u00edcia\n5. Nome do regulador\n6. Ementa ou resumo da not\u00edcia\n7. Conte\u00fado completo da not\u00edcia\n8. URL/link da not\u00edcia\n\nFormate as informa\u00e7\u00f5es de cada not\u00edcia em JSON seguindo exatamente este modelo:\n{\n  \"feito_por\": \"\",\n  \"revisado_por\": \"\",\n  \"data_publicacao\": \"\",\n  \"dia_semana\": \"\",\n  \"hora_publicacao\": \"\",\n  \"regulador\": \"CVM\",\n  \"titulo\": \"\",\n  \"ementa\": \"\",\n  \"conteudo_completo\": \"\",\n  \"link\": \"\"\n}\n\nSe algum dos campos n\u00e3o estiver dispon\u00edvel, deixe-o vazio, mas inclua todos os campos. Retorne um JSON v\u00e1lido para cada not\u00edcia. Se houver mais de uma not\u00edcia, retorne um array de JSONs."}}
2025-05-09 11:48:03,351 - browser-use-diag - DEBUG - {"task_id": "task_7d364e6ef53a4ac7", "timestamp": "2025-05-09T11:48:03.351326", "message": "Agente inicializado com sucesso", "extra_data": null}
2025-05-09 11:48:03,351 - browser-use-diag - INFO - {"task_id": "task_7d364e6ef53a4ac7", "timestamp": "2025-05-09T11:48:03.351654", "message": "Iniciando execu\u00e7\u00e3o do agente run()", "extra_data": null}
2025-05-09 11:51:42,158 - browser-use-diag - INFO - {"task_id": "task_7d364e6ef53a4ac7", "timestamp": "2025-05-09T11:51:42.158791", "message": "Execu\u00e7\u00e3o do agente conclu\u00edda em 219.43 segundos", "extra_data": null}
2025-05-09 11:51:42,159 - browser-use-diag - DEBUG - {"task_id": "task_7d364e6ef53a4ac7", "timestamp": "2025-05-09T11:51:42.159459", "message": "Extraindo resultado final do agente", "extra_data": null}
2025-05-09 11:51:42,159 - browser-use-diag - DEBUG - {"task_id": "task_7d364e6ef53a4ac7", "timestamp": "2025-05-09T11:51:42.159586", "message": "Resultado final obtido", "extra_data": {"result_size": 819}}
2025-05-09 11:51:42,159 - browser-use-diag - DEBUG - {"task_id": "task_7d364e6ef53a4ac7", "timestamp": "2025-05-09T11:51:42.159744", "message": "Tentando parsear resultado como JSON", "extra_data": null}
2025-05-09 11:51:42,159 - browser-use-diag - WARNING - {"task_id": "task_7d364e6ef53a4ac7", "timestamp": "2025-05-09T11:51:42.159936", "message": "Erro ao parsear JSON", "extra_data": {"error": "Expecting value: line 1 column 1 (char 0)"}}
2025-05-09 11:51:42,160 - browser-use-diag - DEBUG - {"task_id": "task_7d364e6ef53a4ac7", "timestamp": "2025-05-09T11:51:42.160055", "message": "Preview do resultado n\u00e3o-JSON", "extra_data": {"preview": "Successfully accessed the CVM website and extracted details from one article:\n\n1. Title: \"EVOLUA: CVM, ANBIMA e FGV d\u00e3o novo passo para o desenvolvimento de estudos e pesquisas no \u00e2mbito do Mercado de Capitais\"\n2. Publication Date: \"08/05/2025\"\n3. Publication Time: \"10h03\"\n4. Author: None\n5. Reviewer: None\n6. Regulator: \"CVM\"\n7. Summary: \"A Comiss\u00e3o de Valores Mobili\u00e1rios (CVM), ANBIMA e FGV unem esfor\u00e7os para desenvolver estudos e pesquisas de interesse do Mercado de Capitais atrav\u00e9s do projeto..."}}
2025-05-09 11:53:49,532 - browser-use-diag - INFO - {"task_id": "task_7261c202b7c75eae", "timestamp": "2025-05-09T11:53:49.532173", "message": "Iniciando tarefa com URL: https://www.gov.br/cvm/pt-br/pagina-inicial/#", "extra_data": {"task": "Acesse https://www.gov.br/cvm/pt-br/pagina-inicial/, clique em 'Assuntos', depois em 'Not\u00edcias'. Leia as not\u00edcias do dia de ontem e para cada uma extraia os seguintes dados:\n\n1. T\u00edtulo da not\u00edcia\n2. Data e hora de publica\u00e7\u00e3o (extraindo dia da semana separadamente)\n3. Quem fez a not\u00edcia\n4. Quem revisou a not\u00edcia\n5. Nome do regulador\n6. Ementa ou resumo da not\u00edcia\n7. Conte\u00fado completo da not\u00edcia\n8. URL/link da not\u00edcia\n\nFormate as informa\u00e7\u00f5es de cada not\u00edcia em JSON seguindo exatamente este modelo:\n{\n  \"feito_por\": \"\",\n  \"revisado_por\": \"\",\n  \"data_publicacao\": \"\",\n  \"dia_semana\": \"\",\n  \"hora_publicacao\": \"\",\n  \"regulador\": \"CVM\",\n  \"titulo\": \"\",\n  \"ementa\": \"\",\n  \"conteudo_completo\": \"\",\n  \"link\": \"\"\n}\n\nSe algum dos campos n\u00e3o estiver dispon\u00edvel, deixe-o vazio, mas inclua todos os campos. Retorne um JSON v\u00e1lido para cada not\u00edcia. Se houver mais de uma not\u00edcia, retorne um array de JSONs.", "timeout": 300}}
2025-05-09 11:53:49,532 - browser-use-diag - DEBUG - {"task_id": "task_7261c202b7c75eae", "timestamp": "2025-05-09T11:53:49.532361", "message": "Construindo o prompt para o agente", "extra_data": {"full_task": "Acesse https://www.gov.br/cvm/pt-br/pagina-inicial/#. Acesse https://www.gov.br/cvm/pt-br/pagina-inicial/, clique em 'Assuntos', depois em 'Not\u00edcias'. Leia as not\u00edcias do dia de ontem e para cada uma extraia os seguintes dados:\n\n1. T\u00edtulo da not\u00edcia\n2. Data e hora de publica\u00e7\u00e3o (extraindo dia da semana separadamente)\n3. Quem fez a not\u00edcia\n4. Quem revisou a not\u00edcia\n5. Nome do regulador\n6. Ementa ou resumo da not\u00edcia\n7. Conte\u00fado completo da not\u00edcia\n8. URL/link da not\u00edcia\n\nFormate as informa\u00e7\u00f5es de cada not\u00edcia em JSON seguindo exatamente este modelo:\n{\n  \"feito_por\": \"\",\n  \"revisado_por\": \"\",\n  \"data_publicacao\": \"\",\n  \"dia_semana\": \"\",\n  \"hora_publicacao\": \"\",\n  \"regulador\": \"CVM\",\n  \"titulo\": \"\",\n  \"ementa\": \"\",\n  \"conteudo_completo\": \"\",\n  \"link\": \"\"\n}\n\nSe algum dos campos n\u00e3o estiver dispon\u00edvel, deixe-o vazio, mas inclua todos os campos. Retorne um JSON v\u00e1lido para cada not\u00edcia. Se houver mais de uma not\u00edcia, retorne um array de JSONs."}}
2025-05-09 11:53:51,806 - browser-use-diag - DEBUG - {"task_id": "task_7261c202b7c75eae", "timestamp": "2025-05-09T11:53:51.806883", "message": "Agente inicializado com sucesso", "extra_data": null}
2025-05-09 11:53:51,807 - browser-use-diag - INFO - {"task_id": "task_7261c202b7c75eae", "timestamp": "2025-05-09T11:53:51.807180", "message": "Iniciando execu\u00e7\u00e3o do agente run()", "extra_data": null}
2025-05-09 11:56:56,299 - browser-use-diag - INFO - {"task_id": "task_99b6523fc7d89cb6", "timestamp": "2025-05-09T11:56:56.299920", "message": "Iniciando tarefa com URL: https://www.gov.br/cvm/pt-br/pagina-inicial/#", "extra_data": {"task": "Acesse https://www.gov.br/cvm/pt-br/pagina-inicial/, clique em 'Pesquisar', busque por 'Assuntos', depois em 'Not\u00edcias'. Leia as not\u00edcias do dia de ontem e para cada uma extraia os seguintes dados:\n\n1. T\u00edtulo da not\u00edcia\n2. Data e hora de publica\u00e7\u00e3o (extraindo dia da semana separadamente)\n3. Quem fez a not\u00edcia\n4. Quem revisou a not\u00edcia\n5. Nome do regulador\n6. Ementa ou resumo da not\u00edcia\n7. Conte\u00fado completo da not\u00edcia\n8. URL/link da not\u00edcia\n\nFormate as informa\u00e7\u00f5es de cada not\u00edcia em JSON seguindo exatamente este modelo:\n{\n  \"feito_por\": \"\",\n  \"revisado_por\": \"\",\n  \"data_publicacao\": \"\",\n  \"dia_semana\": \"\",\n  \"hora_publicacao\": \"\",\n  \"regulador\": \"CVM\",\n  \"titulo\": \"\",\n  \"ementa\": \"\",\n  \"conteudo_completo\": \"\",\n  \"link\": \"\"\n}\n\nSe algum dos campos n\u00e3o estiver dispon\u00edvel, deixe-o vazio, mas inclua todos os campos. Retorne um JSON v\u00e1lido para cada not\u00edcia. Se houver mais de uma not\u00edcia, retorne um array de JSONs.", "timeout": 300}}
2025-05-09 11:56:56,300 - browser-use-diag - DEBUG - {"task_id": "task_99b6523fc7d89cb6", "timestamp": "2025-05-09T11:56:56.300173", "message": "Construindo o prompt para o agente", "extra_data": {"full_task": "Acesse https://www.gov.br/cvm/pt-br/pagina-inicial/#. Acesse https://www.gov.br/cvm/pt-br/pagina-inicial/, clique em 'Pesquisar', busque por 'Assuntos', depois em 'Not\u00edcias'. Leia as not\u00edcias do dia de ontem e para cada uma extraia os seguintes dados:\n\n1. T\u00edtulo da not\u00edcia\n2. Data e hora de publica\u00e7\u00e3o (extraindo dia da semana separadamente)\n3. Quem fez a not\u00edcia\n4. Quem revisou a not\u00edcia\n5. Nome do regulador\n6. Ementa ou resumo da not\u00edcia\n7. Conte\u00fado completo da not\u00edcia\n8. URL/link da not\u00edcia\n\nFormate as informa\u00e7\u00f5es de cada not\u00edcia em JSON seguindo exatamente este modelo:\n{\n  \"feito_por\": \"\",\n  \"revisado_por\": \"\",\n  \"data_publicacao\": \"\",\n  \"dia_semana\": \"\",\n  \"hora_publicacao\": \"\",\n  \"regulador\": \"CVM\",\n  \"titulo\": \"\",\n  \"ementa\": \"\",\n  \"conteudo_completo\": \"\",\n  \"link\": \"\"\n}\n\nSe algum dos campos n\u00e3o estiver dispon\u00edvel, deixe-o vazio, mas inclua todos os campos. Retorne um JSON v\u00e1lido para cada not\u00edcia. Se houver mais de uma not\u00edcia, retorne um array de JSONs."}}
2025-05-09 11:56:58,659 - browser-use-diag - DEBUG - {"task_id": "task_99b6523fc7d89cb6", "timestamp": "2025-05-09T11:56:58.659509", "message": "Agente inicializado com sucesso", "extra_data": null}
2025-05-09 11:56:58,659 - browser-use-diag - INFO - {"task_id": "task_99b6523fc7d89cb6", "timestamp": "2025-05-09T11:56:58.659828", "message": "Iniciando execu\u00e7\u00e3o do agente run()", "extra_data": null}
2025-05-09 11:58:28,313 - browser-use-diag - INFO - {"task_id": "task_99b6523fc7d89cb6", "timestamp": "2025-05-09T11:58:28.313160", "message": "Execu\u00e7\u00e3o do agente conclu\u00edda em 92.01 segundos", "extra_data": null}
2025-05-09 11:58:28,313 - browser-use-diag - DEBUG - {"task_id": "task_99b6523fc7d89cb6", "timestamp": "2025-05-09T11:58:28.313404", "message": "Extraindo resultado final do agente", "extra_data": null}
2025-05-09 11:58:28,313 - browser-use-diag - DEBUG - {"task_id": "task_99b6523fc7d89cb6", "timestamp": "2025-05-09T11:58:28.313506", "message": "Resultado final obtido", "extra_data": {"result_size": 198}}
2025-05-09 11:58:28,313 - browser-use-diag - DEBUG - {"task_id": "task_99b6523fc7d89cb6", "timestamp": "2025-05-09T11:58:28.313617", "message": "Tentando parsear resultado como JSON", "extra_data": null}
2025-05-09 11:58:28,313 - browser-use-diag - WARNING - {"task_id": "task_99b6523fc7d89cb6", "timestamp": "2025-05-09T11:58:28.313864", "message": "Erro ao parsear JSON", "extra_data": {"error": "Expecting value: line 1 column 1 (char 0)"}}
2025-05-09 11:58:28,314 - browser-use-diag - DEBUG - {"task_id": "task_99b6523fc7d89cb6", "timestamp": "2025-05-09T11:58:28.313986", "message": "Preview do resultado n\u00e3o-JSON", "extra_data": {"preview": "Nenhuma not\u00edcia publicada no dia de ontem (2025-05-08) foi encontrada nos resultados exibidos na busca por 'Assuntos' em 'Not\u00edcias' no site da CVM. Retornando array JSON vazio conforme instru\u00e7\u00e3o:\n[]"}}
2025-05-09 11:59:44,928 - browser-use-diag - INFO - {"task_id": "task_3a15cc1c83fdbfbb", "timestamp": "2025-05-09T11:59:44.928122", "message": "Iniciando tarefa com URL: https://www.gov.br/cvm/pt-br/assuntos/noticias", "extra_data": {"task": "Acesse https://www.gov.br/cvm/pt-br/assuntos/noticias/. Leia as not\u00edcias do dia de ontem e para cada uma extraia os seguintes dados:\n\n1. T\u00edtulo da not\u00edcia\n2. Data e hora de publica\u00e7\u00e3o (extraindo dia da semana separadamente)\n3. Quem fez a not\u00edcia\n4. Quem revisou a not\u00edcia\n5. Nome do regulador\n6. Ementa ou resumo da not\u00edcia\n7. Conte\u00fado completo da not\u00edcia\n8. URL/link da not\u00edcia\n\nFormate as informa\u00e7\u00f5es de cada not\u00edcia em JSON seguindo exatamente este modelo:\n{\n  \"feito_por\": \"\",\n  \"revisado_por\": \"\",\n  \"data_publicacao\": \"\",\n  \"dia_semana\": \"\",\n  \"hora_publicacao\": \"\",\n  \"regulador\": \"CVM\",\n  \"titulo\": \"\",\n  \"ementa\": \"\",\n  \"conteudo_completo\": \"\",\n  \"link\": \"\"\n}\n\nSe algum dos campos n\u00e3o estiver dispon\u00edvel, deixe-o vazio, mas inclua todos os campos. Retorne um JSON v\u00e1lido para cada not\u00edcia. Se houver mais de uma not\u00edcia, retorne um array de JSONs.", "timeout": 300}}
2025-05-09 11:59:44,928 - browser-use-diag - DEBUG - {"task_id": "task_3a15cc1c83fdbfbb", "timestamp": "2025-05-09T11:59:44.928317", "message": "Construindo o prompt para o agente", "extra_data": {"full_task": "Acesse https://www.gov.br/cvm/pt-br/assuntos/noticias. Acesse https://www.gov.br/cvm/pt-br/assuntos/noticias/. Leia as not\u00edcias do dia de ontem e para cada uma extraia os seguintes dados:\n\n1. T\u00edtulo da not\u00edcia\n2. Data e hora de publica\u00e7\u00e3o (extraindo dia da semana separadamente)\n3. Quem fez a not\u00edcia\n4. Quem revisou a not\u00edcia\n5. Nome do regulador\n6. Ementa ou resumo da not\u00edcia\n7. Conte\u00fado completo da not\u00edcia\n8. URL/link da not\u00edcia\n\nFormate as informa\u00e7\u00f5es de cada not\u00edcia em JSON seguindo exatamente este modelo:\n{\n  \"feito_por\": \"\",\n  \"revisado_por\": \"\",\n  \"data_publicacao\": \"\",\n  \"dia_semana\": \"\",\n  \"hora_publicacao\": \"\",\n  \"regulador\": \"CVM\",\n  \"titulo\": \"\",\n  \"ementa\": \"\",\n  \"conteudo_completo\": \"\",\n  \"link\": \"\"\n}\n\nSe algum dos campos n\u00e3o estiver dispon\u00edvel, deixe-o vazio, mas inclua todos os campos. Retorne um JSON v\u00e1lido para cada not\u00edcia. Se houver mais de uma not\u00edcia, retorne um array de JSONs."}}
2025-05-09 11:59:45,761 - browser-use-diag - DEBUG - {"task_id": "task_3a15cc1c83fdbfbb", "timestamp": "2025-05-09T11:59:45.761109", "message": "Agente inicializado com sucesso", "extra_data": null}
2025-05-09 11:59:45,761 - browser-use-diag - INFO - {"task_id": "task_3a15cc1c83fdbfbb", "timestamp": "2025-05-09T11:59:45.761456", "message": "Iniciando execu\u00e7\u00e3o do agente run()", "extra_data": null}
2025-05-09 12:02:44,451 - browser-use-diag - INFO - {"task_id": "task_d5be04e1c975814c", "timestamp": "2025-05-09T12:02:44.451142", "message": "Iniciando tarefa com URL: https://www.gov.br/cvm/pt-br/assuntos/noticias", "extra_data": {"task": "Acesse https://www.gov.br/cvm/pt-br/assuntos/noticias/. Leia as not\u00edcias do dia de ontem e para cada uma extraia os seguintes dados:\n\n1. T\u00edtulo da not\u00edcia\n2. Data e hora de publica\u00e7\u00e3o (extraindo dia da semana separadamente)\n3. Quem fez a not\u00edcia\n4. Quem revisou a not\u00edcia\n5. Nome do regulador\n6. Ementa ou resumo da not\u00edcia\n7. Conte\u00fado completo da not\u00edcia\n8. URL/link da not\u00edcia\n\nFormate as informa\u00e7\u00f5es de cada not\u00edcia em JSON seguindo exatamente este modelo:\n{\n  \"feito_por\": \"\",\n  \"revisado_por\": \"\",\n  \"data_publicacao\": \"\",\n  \"dia_semana\": \"\",\n  \"hora_publicacao\": \"\",\n  \"regulador\": \"CVM\",\n  \"titulo\": \"\",\n  \"ementa\": \"\",\n  \"conteudo_completo\": \"\",\n  \"link\": \"\"\n}\n\nSe algum dos campos n\u00e3o estiver dispon\u00edvel, deixe-o vazio, mas inclua todos os campos. Retorne um JSON v\u00e1lido para cada not\u00edcia. Se houver mais de uma not\u00edcia, retorne um array de JSONs.", "timeout": 300}}
2025-05-09 12:02:44,451 - browser-use-diag - DEBUG - {"task_id": "task_d5be04e1c975814c", "timestamp": "2025-05-09T12:02:44.451438", "message": "Construindo o prompt para o agente", "extra_data": {"full_task": "Acesse https://www.gov.br/cvm/pt-br/assuntos/noticias. Acesse https://www.gov.br/cvm/pt-br/assuntos/noticias/. Leia as not\u00edcias do dia de ontem e para cada uma extraia os seguintes dados:\n\n1. T\u00edtulo da not\u00edcia\n2. Data e hora de publica\u00e7\u00e3o (extraindo dia da semana separadamente)\n3. Quem fez a not\u00edcia\n4. Quem revisou a not\u00edcia\n5. Nome do regulador\n6. Ementa ou resumo da not\u00edcia\n7. Conte\u00fado completo da not\u00edcia\n8. URL/link da not\u00edcia\n\nFormate as informa\u00e7\u00f5es de cada not\u00edcia em JSON seguindo exatamente este modelo:\n{\n  \"feito_por\": \"\",\n  \"revisado_por\": \"\",\n  \"data_publicacao\": \"\",\n  \"dia_semana\": \"\",\n  \"hora_publicacao\": \"\",\n  \"regulador\": \"CVM\",\n  \"titulo\": \"\",\n  \"ementa\": \"\",\n  \"conteudo_completo\": \"\",\n  \"link\": \"\"\n}\n\nSe algum dos campos n\u00e3o estiver dispon\u00edvel, deixe-o vazio, mas inclua todos os campos. Retorne um JSON v\u00e1lido para cada not\u00edcia. Se houver mais de uma not\u00edcia, retorne um array de JSONs."}}
2025-05-09 12:02:48,683 - browser-use-diag - DEBUG - {"task_id": "task_d5be04e1c975814c", "timestamp": "2025-05-09T12:02:48.683464", "message": "Agente inicializado com sucesso", "extra_data": null}
2025-05-09 12:02:48,683 - browser-use-diag - INFO - {"task_id": "task_d5be04e1c975814c", "timestamp": "2025-05-09T12:02:48.683796", "message": "Iniciando execu\u00e7\u00e3o do agente run()", "extra_data": null}
2025-05-09 12:04:26,294 - browser-use-diag - INFO - {"task_id": "task_d5be04e1c975814c", "timestamp": "2025-05-09T12:04:26.294881", "message": "Execu\u00e7\u00e3o do agente conclu\u00edda em 101.84 segundos", "extra_data": null}
2025-05-09 12:04:26,295 - browser-use-diag - DEBUG - {"task_id": "task_d5be04e1c975814c", "timestamp": "2025-05-09T12:04:26.295146", "message": "Extraindo resultado final do agente", "extra_data": null}
2025-05-09 12:04:26,295 - browser-use-diag - DEBUG - {"task_id": "task_d5be04e1c975814c", "timestamp": "2025-05-09T12:04:26.295252", "message": "Resultado final obtido", "extra_data": {"result_size": 3471}}
2025-05-09 12:04:26,295 - browser-use-diag - DEBUG - {"task_id": "task_d5be04e1c975814c", "timestamp": "2025-05-09T12:04:26.295435", "message": "Tentando parsear resultado como JSON", "extra_data": null}
2025-05-09 12:04:26,295 - browser-use-diag - DEBUG - {"task_id": "task_d5be04e1c975814c", "timestamp": "2025-05-09T12:04:26.295590", "message": "Parse JSON bem-sucedido", "extra_data": null}
2025-05-09 12:04:26,295 - browser-use-diag - DEBUG - {"task_id": "task_d5be04e1c975814c", "timestamp": "2025-05-09T12:04:26.295722", "message": "Resultado \u00e9 uma lista com 1 itens", "extra_data": null}
2025-05-09 12:24:15,059 - browser-use-diag - INFO - {"task_id": "task_992c77cdf2b7b3cb", "timestamp": "2025-05-09T12:24:15.059080", "message": "Iniciando tarefa com URL: https://www.gov.br/cvm/pt-br/assuntos/noticias", "extra_data": {"task": "Acesse https://www.gov.br/cvm/pt-br/assuntos/noticias/. Leia as not\u00edcias do dia de ontem e para cada uma extraia os seguintes dados:\n\n1. T\u00edtulo da not\u00edcia\n2. Data e hora de publica\u00e7\u00e3o (extraindo dia da semana separadamente)\n3. Quem fez a not\u00edcia\n4. Quem revisou a not\u00edcia\n5. Nome do regulador\n6. Ementa ou resumo da not\u00edcia\n7. Conte\u00fado completo da not\u00edcia\n8. URL/link da not\u00edcia\n\nFormate as informa\u00e7\u00f5es de cada not\u00edcia em JSON seguindo exatamente este modelo:\n{\n  \"feito_por\": \"\",\n  \"revisado_por\": \"\",\n  \"data_publicacao\": \"\",\n  \"dia_semana\": \"\",\n  \"hora_publicacao\": \"\",\n  \"regulador\": \"CVM\",\n  \"titulo\": \"\",\n  \"ementa\": \"\",\n  \"conteudo_completo\": \"\",\n  \"link\": \"\"\n}\n\nSe algum dos campos n\u00e3o estiver dispon\u00edvel, deixe-o vazio, mas inclua todos os campos. Retorne um JSON v\u00e1lido para cada not\u00edcia. Se houver mais de uma not\u00edcia, retorne um array de JSONs.", "timeout": 300}}
2025-05-09 12:24:15,060 - browser-use-diag - DEBUG - {"task_id": "task_992c77cdf2b7b3cb", "timestamp": "2025-05-09T12:24:15.060123", "message": "Construindo o prompt para o agente", "extra_data": {"full_task": "Acesse https://www.gov.br/cvm/pt-br/assuntos/noticias. Acesse https://www.gov.br/cvm/pt-br/assuntos/noticias/. Leia as not\u00edcias do dia de ontem e para cada uma extraia os seguintes dados:\n\n1. T\u00edtulo da not\u00edcia\n2. Data e hora de publica\u00e7\u00e3o (extraindo dia da semana separadamente)\n3. Quem fez a not\u00edcia\n4. Quem revisou a not\u00edcia\n5. Nome do regulador\n6. Ementa ou resumo da not\u00edcia\n7. Conte\u00fado completo da not\u00edcia\n8. URL/link da not\u00edcia\n\nFormate as informa\u00e7\u00f5es de cada not\u00edcia em JSON seguindo exatamente este modelo:\n{\n  \"feito_por\": \"\",\n  \"revisado_por\": \"\",\n  \"data_publicacao\": \"\",\n  \"dia_semana\": \"\",\n  \"hora_publicacao\": \"\",\n  \"regulador\": \"CVM\",\n  \"titulo\": \"\",\n  \"ementa\": \"\",\n  \"conteudo_completo\": \"\",\n  \"link\": \"\"\n}\n\nSe algum dos campos n\u00e3o estiver dispon\u00edvel, deixe-o vazio, mas inclua todos os campos. Retorne um JSON v\u00e1lido para cada not\u00edcia. Se houver mais de uma not\u00edcia, retorne um array de JSONs."}}
2025-05-09 12:24:15,964 - browser-use-diag - DEBUG - {"task_id": "task_992c77cdf2b7b3cb", "timestamp": "2025-05-09T12:24:15.964031", "message": "Agente inicializado com sucesso", "extra_data": null}
2025-05-09 12:24:15,964 - browser-use-diag - INFO - {"task_id": "task_992c77cdf2b7b3cb", "timestamp": "2025-05-09T12:24:15.964332", "message": "Iniciando execu\u00e7\u00e3o do agente run()", "extra_data": null}
2025-05-09 12:26:38,854 - browser-use-diag - INFO - {"task_id": "task_992c77cdf2b7b3cb", "timestamp": "2025-05-09T12:26:38.854084", "message": "Execu\u00e7\u00e3o do agente conclu\u00edda em 143.79 segundos", "extra_data": null}
2025-05-09 12:26:38,854 - browser-use-diag - DEBUG - {"task_id": "task_992c77cdf2b7b3cb", "timestamp": "2025-05-09T12:26:38.854318", "message": "Extraindo resultado final do agente", "extra_data": null}
2025-05-09 12:26:38,854 - browser-use-diag - DEBUG - {"task_id": "task_992c77cdf2b7b3cb", "timestamp": "2025-05-09T12:26:38.854422", "message": "Resultado final obtido", "extra_data": {"result_size": 3338}}
2025-05-09 12:26:38,854 - browser-use-diag - DEBUG - {"task_id": "task_992c77cdf2b7b3cb", "timestamp": "2025-05-09T12:26:38.854633", "message": "Tentando parsear resultado como JSON", "extra_data": null}
2025-05-09 12:26:38,854 - browser-use-diag - DEBUG - {"task_id": "task_992c77cdf2b7b3cb", "timestamp": "2025-05-09T12:26:38.854781", "message": "Parse JSON bem-sucedido", "extra_data": null}
2025-05-09 12:26:38,854 - browser-use-diag - DEBUG - {"task_id": "task_992c77cdf2b7b3cb", "timestamp": "2025-05-09T12:26:38.854871", "message": "Resultado \u00e9 uma lista com 1 itens", "extra_data": null}
2025-05-13 22:07:15,024 - browser-use-diag - INFO - Watchtower configurado para o logger de diagnóstico. Grupo: BrowserUseAPILogs, Stream: diag-logs
2025-05-14 08:34:19,445 - browser-use-diag - INFO - Watchtower configurado para o logger de diagnóstico. Grupo: BrowserUseAPILogs, Stream: diag-logs
2025-05-14 08:34:58,650 - browser-use-diag - INFO - Watchtower configurado para o logger de diagnóstico. Grupo: BrowserUseAPILogs, Stream: diag-logs
